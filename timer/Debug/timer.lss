
timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000154  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000184  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006a4  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000621  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000232  00000000  00000000  00000eb1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  000010e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000359  00000000  00000000  00001128  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000003c  00000000  00000000  00001481  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000014bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__vector_13>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 6e 00 	jmp	0xdc	; 0xdc <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
*/
unsigned char timecount;

int main(void)
{
	cli();
  90:	f8 94       	cli
	PORTB = (1<<DDB0);
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	85 b9       	out	0x05, r24	; 5
	// 7.3728MHz / 1024 (prescale) = 7.2Khz => T=1/7.2kHz = 138,88us
	// 138,88us x 180 = 25ms
	// então TCNT = 256 - 180 = 76 (4CH)
	//--------------------------------------------------------------

	TCCR0B = 0x05;
  96:	95 e0       	ldi	r25, 0x05	; 5
  98:	95 bd       	out	0x25, r25	; 37
	TCNT0 = 0x4C;
  9a:	9c e4       	ldi	r25, 0x4C	; 76
  9c:	96 bd       	out	0x26, r25	; 38
	TIMSK1 = 0X01;
  9e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	
	PORTB = 0;
  a2:	15 b8       	out	0x05, r1	; 5
	sei();
  a4:	78 94       	sei
  a6:	ff cf       	rjmp	.-2      	; 0xa6 <main+0x16>

000000a8 <__vector_13>:
	
    while (1) 
    {
    }
}
ISR(TIMER1_OVF_vect){
  a8:	1f 92       	push	r1
  aa:	0f 92       	push	r0
  ac:	0f b6       	in	r0, 0x3f	; 63
  ae:	0f 92       	push	r0
  b0:	11 24       	eor	r1, r1
  b2:	8f 93       	push	r24
	TCNT0 = 0x4C;
  b4:	8c e4       	ldi	r24, 0x4C	; 76
  b6:	86 bd       	out	0x26, r24	; 38
	++timecount;
  b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  bc:	8f 5f       	subi	r24, 0xFF	; 255
	
	if (timecount==40){
  be:	88 32       	cpi	r24, 0x28	; 40
  c0:	19 f0       	breq	.+6      	; 0xc8 <__vector_13+0x20>
    {
    }
}
ISR(TIMER1_OVF_vect){
	TCNT0 = 0x4C;
	++timecount;
  c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  c6:	04 c0       	rjmp	.+8      	; 0xd0 <__vector_13+0x28>
	
	if (timecount==40){
		timecount = 0;
  c8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		PORTB ^= PORTB0;//inverte led
  cc:	85 b1       	in	r24, 0x05	; 5
  ce:	85 b9       	out	0x05, r24	; 5
	}
}
  d0:	8f 91       	pop	r24
  d2:	0f 90       	pop	r0
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	0f 90       	pop	r0
  d8:	1f 90       	pop	r1
  da:	18 95       	reti

000000dc <_exit>:
  dc:	f8 94       	cli

000000de <__stop_program>:
  de:	ff cf       	rjmp	.-2      	; 0xde <__stop_program>
